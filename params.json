{
  "name": "A simple technique for the remote detection of user's antivirus ",
  "tagline": "",
  "body": "\r\nThe operating system I often work with is windows 7, and to ensure greater safety, I installed Kaspersky Internet Security antivirus software. One day, looking through one of the web pages, I noticed a very interesting code, which in my opinion should not have been on the page.\r\n\r\n![facebook_kaspersky](https://vah13.github.io/AVDetection/img/1.png)\r\n\r\nWhy does Facebook use javascript code with Kaspersky website?. I immediately realized that my antivirus made MITM traffic  (http & https), and injected its code to track the activity on the page. Hmmm, why not create a special page that will monitor the Javascript's scripts, and understand - have on the client computer any antivirus, include KIS.\r\n\r\nCreate on the server first page - iframe.html \r\n```\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head/>\r\n        <img src=x />\r\n    <script type=\"text/javascript\" />\r\n\r\n</html>\r\n```\r\nand after create second page - index.html with this HTML code\r\n```\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n<title>Remotely  AV detection</title>\r\n</head>\r\n<body>\r\n\r\n<iframe style=\"width:10px; height:10px; display:block; visibility:show\" id=\"frmin\" src=\"/iframe.html\"></iframe>\r\n<button onclick=\"myFunction()\">Check  AV</button>\r\n<script>\r\nfunction myFunction() {\r\nvar frm = document.getElementById(\"frmin\");\r\nka = frm.contentDocument.getElementsByTagName('html')[0].outerHTML;\r\nif (ka.indexOf(\"kasperskylab_antibanner\") !== -1)\r\n{\r\n        alert(\"AV name is Kaspersky\");\r\n}\r\n}\r\n\r\n</script>\r\n\r\n</body>\r\n</html>\r\n```\r\nWhen we open index.html page, it will load iframe.html and inject JS code. In this img we can see changed iframe page code\r\n![kasperskylab_antibanner](https://vah13.github.io/AVDetection/img/2.png)\r\n\r\n\r\ngreat, to detect, KIS antivirus needs to get code from iframe.html page and parse strings, if the page has **kasperskylab_antibanner** then we can say - the client computer has installed KIS antivirus.\r\n\r\nI wanted to see how things will pan out from other antivirus software if other anti-virus software to detect, or only KIS. Next, consider Avira, Norton, DrWeb antivirus, if anyone wants to continue this mini study, I will be glad to hear about the rest of it works.\r\n\r\nAntivirus Avira, Norton, DrWeb, together with the installation of the system, for the chrome browser, install and even add-ons which are as of injectate to the page specific data which can be Oh detectit.\r\n\r\n**Dr.Web**\r\nProduct version DrWeb Security Space 11.0\r\n![dr.web version](https://vah13.github.io/AVDetection/img/3.png)\r\n\r\nChrome extension name s - Dr.Web Anti-Virus Link Checker\r\nExtension URL\r\nhttps://chrome.google.com/webstore/detail/drweb-anti-virus-link-che/aleggpabliehgbeagmfhnodcijcmbonb?hl=en-US\r\nOn the index.html page injected follow code \r\n\r\n![dr.web_JS](https://vah13.github.io/AVDetection/img/4.png)\r\n\r\ni.e. using the following simple JS code can be found installed DrWeb us or not.\r\n\r\n```\r\n<script>\r\nif (document.getElementsByClassName('drweb_btn').length > 0)\r\n{\r\n        alert(\"AV name is DrWeb\");\r\n}\r\n</script>\r\n```\r\n**Avira**\r\nWhen installing Avira antivirus Pro, it installed 2 extensions in the Chrome browser\r\nAvira Browser Safety and Avira Save Search Plus\r\n![avira](https://vah13.github.io/AVDetection/img/5.png)\r\n\r\nAvira on the page index.html injected iframe which has the following form\r\n![avira_JS](https://vah13.github.io/AVDetection/img/6.png)\r\n\r\nand it turns out JS code for detect Avira extension is as follows\r\n\r\n```\r\nvar AV = document.getElementById(\"abs-top-frame\")\r\nif (AV!==null)\r\n{\r\nif ( \r\nAV.outerHTML.indexOf('/html/top.html')>=0 & AV.outerHTML.indexOf('chrome-extension://')>=0 \r\n)\r\n{\r\n\talert(\"AV name is Avira\");\r\n}\r\n}\r\n```\r\n\r\n**Norton**\r\nAnd finally the last extension to AV which I had to consider - Norton\r\nHe has installed, like Avira, 2 extension\r\n![norton](https://vah13.github.io/AVDetection/img/7.png)\r\n\r\nJS code which is implemented by the extension on the page as follows\r\n![avira](https://vah13.github.io/AVDetection/img/8.png)\r\n\r\nand in the end, it turned out that it is also very easy to detected using this JS code\r\n\r\n```\r\nvar NAV = document.getElementById('coFrameDiv');\r\nif ( NAV !== null)\r\n{\r\n\tvar nort = NAV.outerHTML;\r\n\tif (nort.indexOf('coToolbarFrame')>=0 & nort.indexOf('/toolbar/placeholder.html')>=0 & nort.indexOf('chrome-extension://')>=0 )\r\n\t{\r\n\t\talert(\"AV name is Norton\");\r\n\t}\r\n}\r\n```\r\n\r\n###Conclusion\r\n1. This method does not guarantee 100% detection AV, as it is based on verification of the installed anti-virus extension for Chrome which can be disabled by the user.\r\n2. The main idea for the writing of this mini article came after reading this article [remote-detection-of-users-av-via-flash](http://agrrrdog.blogspot.ru/2016/06/remote-detection-of-users-av-via-flash.html)\r\n3. Progect code can found [AVDetection](https://github.com/vah13/AVDetection)\r\n\r\n\r\n\r\n\r\n[@vah_13](https://twitter.com/vah_13)\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}